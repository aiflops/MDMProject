@using MDMProject.Models
@using MDMProject.Resources
@model MDMProject.ViewModels.CreateUserViewModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm(Model.IsCoordinator ? "SaveCreateCoordinator" : "SaveCreateAdmin", "UserManagement"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@(Model.IsCoordinator ? "Dodaj koordynatora" : "Dodaj administratora")</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(x => x.IsCoordinator)
        @Html.HiddenFor(x => x.IsAdmin)

        <div class="form-group">
            <div class="col-md-12">
                <div class="input-group">
                    <label>@PropertyNames.User_UserType</label>
                </div>
            </div>

            <div class="col-md-6">
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(x => x.UserType, UserTypeEnum.Company)
                        @PropertyNames.User_UserType_Company
                    </label>
                </div>
            </div>

            <div class="col-md-6">
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(x => x.UserType, UserTypeEnum.Individual)
                        @PropertyNames.User_UserType_IndividualPerson
                    </label>
                </div>
            </div>
        </div>

        <div class="company-field form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="company-field form-group">
            @Html.LabelFor(model => model.ContactPersonName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactPersonName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactPersonName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="individual-field form-group" style="display: none;">
            @Html.LabelFor(model => model.IndividualName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IndividualName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IndividualName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        
        @if (Model.IsCoordinator)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.CoordinatedRegion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CoordinatedRegion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CoordinatedRegion, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(x => x.CoordinatedRegion)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.AdditionalComment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.AdditionalComment, new { @class = "form-control", rows = 4, cols = "" })
                @Html.ValidationMessageFor(model => model.AdditionalComment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-primary" />
                @if (Model.IsCoordinator)
                {
                    <a href="@Url.Action("CoordinatorsList", "Admin")" class="btn btn-secondary">Anuluj</a>
                }
                else if (Model.IsAdmin)
                {
                    <a href="@Url.Action("AdministratorsList", "Admin")" class="btn btn-secondary">Anuluj</a>
                }
            </div>
        </div>
    </div>
}

@section scripts {
    @Scripts.Render("~/scripts/validation")
    <script src="~/Scripts/custom/createUser.js"></script>
}