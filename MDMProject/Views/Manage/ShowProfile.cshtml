@using MDMProject.Models
@using MDMProject.Resources
@using MDMProject.ViewModels
@model EditProfileViewModel
@{
    ViewBag.Title = ViewResources.Manage_ShowProfile__Title;
}

<main class="edit-profile">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 col-md-8 col-12">
                <div class="form-container">
                    <h1 class="form-header mb-3">@ViewResources.Manage_ShowProfile__YourProfile</h1>

                    @if (ViewBag.IsSuccess == true)
                    {
                        <div class="alert alert-success" role="alert">
                            <strong>@ViewResources.Manage_ShowProfile__Success!</strong>
                            <p>@ViewResources.Manage_ShowProfile__ProfileUpdatedAndAwaitingApproval</p>
                            <a href="@Url.Action("MapIndex", "Map")" class="btn btn-primary mt-2">@ViewResources.Manage_ShowProfile__GoToMap</a>
                        </div>
                    }

                    <div class="input-group  mt-1">
                        @Html.LabelFor(m => m.UserType)
                        <p>@(Model.UserType == UserTypeEnum.Company ? PropertyNames.User_UserType_Company : PropertyNames.User_UserType_IndividualPerson)</p>
                    </div>

                    @if (Model.UserType == UserTypeEnum.Company)
                    {
                        <div class="row">
                            <div class="col-md-6">
                                <div class="input-group mt-1 company-field">
                                    @Html.LabelFor(m => m.CompanyName)
                                    <p>@Html.DisplayFor(m => m.CompanyName)</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="input-group mt-1 company-field">
                                    @Html.LabelFor(m => m.ContactPersonName)
                                    <p>@Html.DisplayFor(m => m.ContactPersonName)</p>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="input-group mt-1 individual-field">
                            @Html.LabelFor(m => m.IndividualName)
                            <p>@Html.DisplayFor(m => m.IndividualName)</p>
                        </div>
                    }
                    <div class="row">
                        <div class="col-md-6">
                            <div class="input-group mt-1">
                                @Html.LabelFor(m => m.Email)
                                <p>@Html.DisplayFor(m => m.Email)</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="input-group mt-1">
                                @Html.LabelFor(m => m.PhoneNumber)
                                <p>@Html.DisplayFor(m => m.PhoneNumber)</p>
                            </div>
                        </div>
                    </div>

                    <div class="input-group mt-1">
                        @Html.LabelFor(m => m.CoordinatorId)
                        <p>@Model.CoordinatorsSelectList.First(x => x.Value == Model.CoordinatorId.Value.ToString()).Text</p>
                    </div>

                    @if (Model.CoordinatorId == Constants.OTHER_COORDINATOR_ID) { 
                        <div class="input-group mt-1">
                            @Html.LabelFor(m => m.OtherCoordinatorDetails)
                            <p>
                                @Html.Raw(Model.OtherCoordinatorDetails != null ? Model.OtherCoordinatorDetails.Replace("\n", "<br>") : "")
                            </p>
                        </div>
                    }

                    <div class="row">
                        <div class="col-md-6">
                            <div class="input-group mt-1">
                                @Html.LabelFor(m => m.StreetName)
                                <p>@Html.DisplayFor(m => m.StreetName)</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="input-group mt-1">
                                @Html.LabelFor(m => m.HouseNumber)
                                <p>@Html.DisplayFor(m => m.HouseNumber)</p>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="input-group mt-1">
                                <label>@ViewResources.Manage_EditProfile__Flat</label>
                                @*@Html.LabelFor(m => m.FlatNumber)*@
                                <p>@Html.DisplayFor(m => m.FlatNumber)</p>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="input-group mt-1">
                                @Html.LabelFor(m => m.PostalCode)
                                <p>@Html.DisplayFor(m => m.PostalCode)</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="input-group mt-1">
                                @Html.LabelFor(m => m.City)
                                <p>@Html.DisplayFor(m => m.City)</p>
                            </div>
                        </div>
                    </div>

                    <div class="input-group mt-1">
                        @Html.LabelFor(m => m.AdditionalComment)
                        <p>
                            @Html.Raw(Model.AdditionalComment != null ? Model.AdditionalComment.Replace("\n", "<br>") : "")
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>